// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: action.capnp

#include "action.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<43> b_c8af65040e5ecb13 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     19, 203,  94,  14,   4, 101, 175, 200,
     19,   0,   0,   0,   2,   0,   0,   0,
    185,  72,  64, 132,  73,  10,  63, 220,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 127,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  97,  99,
    116, 105, 111, 110,  46,  99,  97, 112,
    110, 112,  58,  77,  97, 112,  84, 121,
    112, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 110,  99, 104,  97, 110, 103, 101,
    100,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 117, 110, 116,  77,  97, 112,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 105, 110, 116,  99, 108, 111,
    117, 100,   0,   0,   0,   0,   0,   0,
    118, 111, 120, 101, 108, 103, 114, 105,
    100,   0,   0,   0,   0,   0,   0,   0,
    102, 117, 108, 108,  86, 111, 120, 101,
    108, 103, 114, 105, 100,   0,   0,   0, }
};
::capnp::word const* const bp_c8af65040e5ecb13 = b_c8af65040e5ecb13.words;
#if !CAPNP_LITE
static const uint16_t m_c8af65040e5ecb13[] = {1, 4, 2, 0, 3};
const ::capnp::_::RawSchema s_c8af65040e5ecb13 = {
  0xc8af65040e5ecb13, b_c8af65040e5ecb13.words, 43, nullptr, m_c8af65040e5ecb13,
  0, 5, nullptr, nullptr, nullptr, { &s_c8af65040e5ecb13, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(MapType_c8af65040e5ecb13, c8af65040e5ecb13);
static const ::capnp::_::AlignedData<115> b_f1d090b2c3bf545e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     94,  84, 191, 195, 178, 144, 208, 241,
     19,   0,   0,   0,   1,   0,   2,   0,
    185,  72,  64, 132,  73,  10,  63, 220,
      2,   0,   7,   0,   0,   0,   6,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  97,  99,
    116, 105, 111, 110,  46,  99,  97, 112,
    110, 112,  58,  65,  99, 116, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    188,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   0,   0,   0,   3,   0,   1,   0,
    216,   0,   0,   0,   2,   0,   1,   0,
      4,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   0,   0,   0,   3,   0,   1,   0,
    224,   0,   0,   0,   2,   0,   1,   0,
      5,   0, 251, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    220,   0,   0,   0,   3,   0,   1,   0,
    232,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 250, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     39, 247, 136, 111, 116,  65, 164, 242,
    229,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 110, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 108,  97, 116, 105, 118, 101,
     74, 111, 105, 110, 116,  84,  97, 114,
    103, 101, 116,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  98, 115, 111, 108, 117, 116, 101,
     74, 111, 105, 110, 116,  84,  97, 114,
    103, 101, 116,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 111,  97, 108,  80, 111, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    141,  23, 210, 206, 172, 145, 199, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 108,  97, 116, 105, 118, 101,
     80, 111, 115, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    141,  23, 210, 206, 172, 145, 199, 177,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 115, 101, 116,   0,   0,   0, }
};
::capnp::word const* const bp_f1d090b2c3bf545e = b_f1d090b2c3bf545e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f1d090b2c3bf545e[] = {
  &s_b1c791acced2178d,
  &s_f2a441746f88f727,
};
static const uint16_t m_f1d090b2c3bf545e[] = {2, 3, 0, 1, 4, 5};
static const uint16_t i_f1d090b2c3bf545e[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_f1d090b2c3bf545e = {
  0xf1d090b2c3bf545e, b_f1d090b2c3bf545e.words, 115, d_f1d090b2c3bf545e, m_f1d090b2c3bf545e,
  2, 6, i_f1d090b2c3bf545e, nullptr, nullptr, { &s_f1d090b2c3bf545e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<58> b_f2a441746f88f727 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     39, 247, 136, 111, 116,  65, 164, 242,
     26,   0,   0,   0,   1,   0,   2,   0,
     94,  84, 191, 195, 178, 144, 208, 241,
      2,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  97,  99,
    116, 105, 111, 110,  46,  99,  97, 112,
    110, 112,  58,  65,  99, 116, 105, 111,
    110,  46, 114, 101, 115, 101, 116,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,  16,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      2, 122,  84, 147,  95, 250,  94, 207,
     77,   0,   0,   0, 194,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    114,  97, 110, 100, 111, 109, 105, 122,
    101,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114,  97, 110, 100, 111, 109, 105, 122,
     97, 116, 105, 111, 110,  80,  97, 114,
     97, 109, 101, 116, 101, 114, 115,   0,
    109,  97, 112,  84, 121, 112, 101,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     19, 203,  94,  14,   4, 101, 175, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f2a441746f88f727 = b_f2a441746f88f727.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f2a441746f88f727[] = {
  &s_c8af65040e5ecb13,
  &s_cf5efa5f93547a02,
  &s_f1d090b2c3bf545e,
};
static const uint16_t m_f2a441746f88f727[] = {2, 1, 0};
static const uint16_t i_f2a441746f88f727[] = {0, 1, 2};
const ::capnp::_::RawSchema s_f2a441746f88f727 = {
  0xf2a441746f88f727, b_f2a441746f88f727.words, 58, d_f2a441746f88f727, m_f2a441746f88f727,
  3, 3, i_f2a441746f88f727, nullptr, nullptr, { &s_f2a441746f88f727, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<71> b_cf5efa5f93547a02 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      2, 122,  84, 147,  95, 250,  94, 207,
     32,   0,   0,   0,   1,   0,   2,   0,
     39, 247, 136, 111, 116,  65, 164, 242,
      2,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112,  47,  97,  99,
    116, 105, 111, 110,  46,  99,  97, 112,
    110, 112,  58,  65,  99, 116, 105, 111,
    110,  46, 114, 101, 115, 101, 116,  46,
    114,  97, 110, 100, 111, 109, 105, 122,
     97, 116, 105, 111, 110,  80,  97, 114,
     97, 109, 101, 116, 101, 114, 115,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
    109, 105, 110,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    185, 162, 231,  39,   8, 111,  90, 233,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0, 240, 191,
      0,   0,   0,   0,   0,   0, 240, 191,
    154, 153, 153, 153, 153, 153, 185, 191,
    109,  97, 120,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    185, 162, 231,  39,   8, 111,  90, 233,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0, 240,  63,
      0,   0,   0,   0,   0,   0, 240,  63,
    154, 153, 153, 153, 153, 153, 185,  63,
    109, 105, 110,  68, 105, 115, 116,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
    154, 153, 153, 153, 153, 153, 217,  63,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cf5efa5f93547a02 = b_cf5efa5f93547a02.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cf5efa5f93547a02[] = {
  &s_e95a6f0827e7a2b9,
  &s_f2a441746f88f727,
};
static const uint16_t m_cf5efa5f93547a02[] = {1, 0, 2};
static const uint16_t i_cf5efa5f93547a02[] = {0, 1, 2};
const ::capnp::_::RawSchema s_cf5efa5f93547a02 = {
  0xcf5efa5f93547a02, b_cf5efa5f93547a02.words, 71, d_cf5efa5f93547a02, m_cf5efa5f93547a02,
  2, 3, i_cf5efa5f93547a02, nullptr, nullptr, { &s_cf5efa5f93547a02, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace vpp_msg {

// Action
constexpr uint16_t Action::_capnpPrivate::dataWordSize;
constexpr uint16_t Action::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Action::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Action::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Action::Reset
constexpr uint16_t Action::Reset::_capnpPrivate::dataWordSize;
constexpr uint16_t Action::Reset::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Action::Reset::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Action::Reset::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Action::Reset::RandomizationParameters
constexpr uint16_t Action::Reset::RandomizationParameters::_capnpPrivate::dataWordSize;
constexpr uint16_t Action::Reset::RandomizationParameters::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Action::Reset::RandomizationParameters::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Action::Reset::RandomizationParameters::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

